{"version":3,"sources":["webpack:///src/app/auth/forgot-password/forgot-password.component.html","webpack:///src/app/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/forgot-password/forgot-password.module.ts"],"names":["ForgotPasswordComponent","router","authService","fBuilder","config","dataService","formErrors","error","success","showLoader","currentCompany","showHeader","forgotForm","group","email","compose","required","valid","formData","value","company_id","forgotPassword","subscribe","response","message","resetForm","setTimeout","navigateByUrl","selector","template","routes","path","component","data","title","ForgotPasswordModule","declarations","imports","forChild","providers"],"mappings":"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","file":"auth-forgot-password-forgot-password-module-es5.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"sign-in-form\\\" [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"brand text-center d-block m-b-30 m-t-20\\\">\\r\\n            <!-- <img src=\\\"assets/logo-login.svg\\\" alt=\\\"DigiPayWallet Logo\\\" style=\\\"width: 150px\\\"> -->\\r\\n        </div>\\r\\n        <h1 class=\\\"sign-in-heading text-center\\\">Forgotten Password?</h1>\\r\\n        <p class=\\\"text-center m-b-20 text-muted\\\">Enter your email address below, and we'll email instructions for setting a new one.</p>\\r\\n        <div *ngIf=\\\"formErrors.success\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n          <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n          <span [innerHTML]=\\\"formErrors.success\\\"> </span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"formErrors.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n          <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n          <span [innerHTML]=\\\"formErrors.error\\\"> </span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email ID</label>\\r\\n          <input [formControl]=\\\"forgotForm.controls['email']\\\" class=\\\"form-control input-lg\\\" type=\\\"text\\\" autofocus placeholder=\\\"Email ID\\\">\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block m-top-24\\\"\\r\\n          [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\" [disabled]=\\\"showLoader\\\">\\r\\n          Submit\\r\\n        </button>\\r\\n        <p class=\\\"text-muted m-t-25 m-b-0 p-0 text-center\\\">Remember Password?<a routerLink=\\\"/login\\\"> Sign In</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { validateEmailFormControl, CommonFunction } from 'src/app/common';\r\nimport { DataService } from 'src/app/service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html'\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n  formErrors = {\r\n    error: null,\r\n    success: null\r\n  };\r\n  showLoader = false;\r\n  currentCompany: any = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n    private config: ConfigService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.forgotForm = this.fBuilder.group({\r\n      email: [null, Validators.compose([Validators.required, validateEmailFormControl])],\r\n    });\r\n    // this.dataService.currentCompany.subscribe((response) => {\r\n    //   // console.log(response);\r\n    //   this.currentCompany = response;\r\n    // });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  submitForm(): void {\r\n    if (this.forgotForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        email: this.forgotForm.value.email,\r\n        company_id: this.currentCompany ? this.currentCompany.company_id : null,\r\n      };\r\n      this.authService.forgotPassword(formData).subscribe((response) => {\r\n        // console.log('In success', response);\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          this.formErrors.success = `* ${response.message}`;\r\n          CommonFunction.resetForm(this.forgotForm);\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/login');\r\n          }, 3000);\r\n        } else {\r\n          this.formErrors.error = `* ${response.error}`;\r\n        }\r\n      },\r\n        (error) => {\r\n          // console.log('In error', error);\r\n          this.formErrors.error = `* ${error.error}`;\r\n          this.showLoader = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordComponent,\r\n    data: { title: 'forgot_password' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ForgotPasswordModule { }\r\n"]}