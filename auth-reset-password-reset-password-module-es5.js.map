{"version":3,"sources":["webpack:///src/app/auth/reset-password/reset-password.component.html","webpack:///src/app/auth/reset-password/reset-password.component.ts","webpack:///src/app/auth/reset-password/reset-password.module.ts"],"names":["ResetPasswordComponent","config","router","activatedRoute","authService","fBuilder","formErrors","error","success","showLoader","token","showHeader","snapshot","paramMap","get","resetPasswordForm","group","password","compose","required","confirm_password","validator","passwordValidation","checkResetPasswordToken","subscribe","response","navigateByUrl","valid","formData","value","resetPassword","message","resetForm","setTimeout","selector","template","routes","path","component","data","title","ResetPasswordModule","declarations","imports","forChild","providers"],"mappings":"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","file":"auth-reset-password-reset-password-module-es5.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"sign-in-form\\\" [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"brand text-center d-block m-b-30 m-t-20\\\">\\r\\n          <!-- <img src=\\\"assets/logo-login.svg\\\" alt=\\\"DigiPayWallet Logo\\\" style=\\\"width: 150px\\\"> -->\\r\\n        </div>\\r\\n        <h1 class=\\\"sign-in-heading text-center\\\">Forgotten Password?</h1>\\r\\n        <p class=\\\"text-center m-b-20 text-muted\\\">Enter your email address below, and we'll email instructions for\\r\\n          setting a new one.</p>\\r\\n        <div *ngIf=\\\"formErrors.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n          <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n          <span [innerHTML]=\\\"formErrors.error\\\"> </span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"formErrors.success\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n          <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n          <span [innerHTML]=\\\"formErrors.success\\\"> </span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">New Password</label>\\r\\n          <input type=\\\"password\\\" [formControl]=\\\"resetPasswordForm.controls['password']\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"New password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputconfirmpassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n          <input type=\\\"password\\\" [formControl]=\\\"resetPasswordForm.controls['confirm_password']\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm password\\\">\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block m-top-24\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\"\\r\\n          [disabled]=\\\"showLoader\\\">\\r\\n          Reset Password\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { CommonFunction, PasswordValidation } from 'src/app/common';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html'\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  resetPasswordForm: FormGroup;\r\n  formErrors = {\r\n    error: null,\r\n    success: null,\r\n  };\r\n  showLoader = false;\r\n  token: any = null;\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.token = this.activatedRoute.snapshot.paramMap.get('token');\r\n    this.resetPasswordForm = this.fBuilder.group({\r\n      password: [null, Validators.compose([Validators.required])], // validatePassword\r\n      confirm_password: [null, Validators.compose([Validators.required])],\r\n    }, {\r\n      validator: PasswordValidation.passwordValidation()\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.checkResetPasswordToken(this.token).subscribe((response) => {\r\n      if (response.success) {\r\n      } else {\r\n        this.router.navigateByUrl('/link-expired');\r\n      }\r\n    }, (error) => {\r\n      this.router.navigateByUrl('/link-expired');\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.resetPasswordForm.valid) {\r\n      this.showLoader = true;\r\n      const formData  = {\r\n        password: this.resetPasswordForm.value.password,\r\n        confirm_password: this.resetPasswordForm.value.confirm_password,\r\n      };\r\n      this.authService.resetPassword(this.token, formData).subscribe((response) => {\r\n        // console.log('In success', response);\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          this.formErrors.success = `* ${response.message}`;\r\n          CommonFunction.resetForm(this.resetPasswordForm);\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/login');\r\n          }, 3000);\r\n        } else {\r\n          this.formErrors.error = `* ${response.error}`;\r\n        }\r\n      }, (error) => {\r\n        // console.log('In error', error);\r\n        this.formErrors.error = `* ${error.error}`;\r\n        this.showLoader = false;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResetPasswordComponent,\r\n    data: { title: 'reset_password' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ResetPasswordModule { }\r\n"]}