{"version":3,"sources":["webpack:///src/app/company/company-list/company-list.component.html","webpack:///src/app/company/company-list/company-list.component.ts","webpack:///src/app/company/company-list/company-list.module.ts","webpack:///src/app/service/company.service.ts"],"names":["CompanyListComponent","router","companyService","commonService","dataService","paginationService","loadingState","objectArray","pagination","searchText","currentPage","subscription","searchTextSubject","subscribe","v","getObjects","params","page","search","getCompanyList","response","success","data","getPager","error","text","object","swal","fire","title","delete_header_text","delete_smalll_text","icon","delete_dialogue_type","showCancelButton","confirmButtonText","delete_confirm_button","cancelButtonText","delete_cancel_button","then","result","value","deleteCompany","id","noop","obj","selectCompany","updateCompany","company","navigateByUrl","unsubscribe","selector","template","routes","path","component","loadChildren","m","AddCompanyModule","CompanyListModule","declarations","imports","forChild","providers","CompanyService","http","API_URL","APIEndpoint","param","get","post","put"],"mappings":"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","file":"company-company-list-company-list-module-es5.js","sourcesContent":["export default \"<loder [show]=\\\"loadingState\\\"></loder>\\r\\n\\r\\n<div class=\\\"page-breadcrumb\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-7 align-self-center\\\">\\r\\n            <h4 class=\\\"page-title text-truncate text-dark font-weight-medium mb-1\\\">Company</h4>\\r\\n            <div class=\\\"d-flex align-items-center\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb m-0 p-0\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"text-muted\\\">Apps</a></li>\\r\\n                        <li class=\\\"breadcrumb-item text-muted active\\\" aria-current=\\\"page\\\">Company List</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-5 align-self-center\\\">\\r\\n            <div class=\\\"customize-input float-right\\\">\\r\\n                <button type=\\\"button\\\" [routerLink]=\\\"['add']\\\" class=\\\"btn btn-outline-info  border-0 custom-shadow custom-radius\\\">Add Company</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"content\\\">\\r\\n    <section class=\\\"page-content container-fluid\\\">\\r\\n        <div class=\\\"card strache-card\\\">\\r\\n            <div class=\\\"card-body p-0\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-hover m-0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <!-- <th style=\\\"width:50px;\\\">Emp. ID</th> -->\\r\\n                                <th>Name</th>\\r\\n                                <th>Phone Number</th>\\r\\n                                <th>Email</th>\\r\\n                                <th class=\\\"table-field-status\\\">Status</th>\\r\\n                                <th class=\\\"table-field-actions\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let obj of objectArray\\\">\\r\\n                                <td>\\r\\n                                    <div class=\\\"media d-user\\\" (click)=\\\"onCompanySelect(obj)\\\">\\r\\n                                        <i class=\\\"fa fa-building-o align-self-center fa-lg mr-3 text-muted\\\"></i>\\r\\n                                        <div class=\\\"media-body\\\">\\r\\n                                            <a>\\r\\n                                                <h5 class=\\\"mt-1 mb-0\\\">{{obj.name}}</h5>\\r\\n                                            </a><span class=\\\"text-muted\\\">{{obj?.address}}</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                <td class=\\\"text-nowrap\\\"> {{obj?.dial_code ? obj?.dial_code:''}} {{obj?.phone_number ? obj?.phone_number : '-'}}</td>\\r\\n                                <td>{{obj?.email}}</td>\\r\\n                                <td class=\\\"table-field-status\\\"><span class=\\\"badge badge-pill badge-success\\\">Active</span></td>\\r\\n                                <td class=\\\"table-field-actions text-center\\\">\\r\\n                                    <div class=\\\"action-drop dropdown\\\">\\r\\n                                        <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" class=\\\"btn btn-default btn-sm btn-icon-only\\\" title=\\\"\\\">\\r\\n                                            <i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n                                        </a>\\r\\n                                        <div class=\\\"dropdown-menu dropdown-icon-menu dropdown-menu-right\\\">\\r\\n                                            <a [routerLink]=\\\"['edit', obj.id]\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-edit fa-fw text-primary\\\">\\r\\n                        </i> Edit</a>\\r\\n                                            <a (click)=\\\"deleteObject(obj)\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-trash fa-fw text-primary\\\">\\r\\n                        </i> Delete</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"objectArray.length==0\\\">\\r\\n                                <td colspan=\\\"5\\\">No Record Found</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <pagination [paginationList]=\\\"pagination\\\" [currentPage]=\\\"currentPage\\\" (onPageChange)=\\\"getPage($event)\\\">\\r\\n                </pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n</div>\";","declare var swal: any;\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { errorMessage } from 'src/app/messages';\r\nimport { CompanyService } from 'src/app/service/company.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { ISubscription } from \"rxjs/Subscription\";\r\n@Component({\r\n  selector: 'app-company-list',\r\n  templateUrl: './company-list.component.html'\r\n})\r\nexport class CompanyListComponent implements OnInit {\r\n\r\n  loadingState = true;\r\n  objectArray: Array<any> = [];\r\n  pagination: any = null;\r\n  searchText: any = null;\r\n  currentPage: any = 1;\r\n  private subscription: ISubscription;\r\n  constructor(\r\n    private router: Router,\r\n    private companyService: CompanyService,\r\n    private commonService:CommonService,\r\n    private dataService: DataService,\r\n    private paginationService:PaginationService\r\n  ) {\r\n   }\r\n\r\n   ngOnInit() {\r\n    this.subscription= this.dataService.searchTextSubject.subscribe((v) =>{ \r\n      this.searchText=v;\r\n      this.getObjects();\r\n    });\r\n  }\r\n\r\n\r\n  getObjects() {\r\n    this.loadingState = true;\r\n    const params: any = { page: this.currentPage};\r\n    if (this.searchText) {\r\n      params.search = this.searchText;\r\n    }\r\n    this.companyService.getCompanyList(params).subscribe((response) => {\r\n      // console.log(response);\r\n      this.loadingState = false;\r\n      if (response.success) {\r\n        this.objectArray = response.data.data;\r\n        this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n      // console.log(error);\r\n    });\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n    this.getObjects();\r\n  }\r\n\r\n  searchObject(text) {\r\n    this.searchText = text;\r\n    this.getObjects();\r\n  }\r\n\r\n  deleteObject(object) {\r\n    swal.fire({\r\n      title: errorMessage.delete_header_text,\r\n      text: errorMessage.delete_smalll_text,\r\n      icon: errorMessage.delete_dialogue_type,\r\n      showCancelButton: true,\r\n      confirmButtonText: errorMessage.delete_confirm_button,\r\n      cancelButtonText: errorMessage.delete_cancel_button,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.companyService.deleteCompany(object.id).subscribe(\r\n          (response) => {\r\n            if (response.success) {\r\n              this.getObjects();\r\n            }\r\n          },\r\n        );\r\n      }\r\n    }).catch(swal.noop);\r\n  }\r\n\r\n  onCompanySelect(obj) {\r\n    // console.log(obj);\r\n    this.commonService.selectCompany(obj.id).subscribe((response) => {\r\n      if (response.success) {\r\n        // this.dataService.saveToken(response.data.token);\r\n        this.dataService.updateCompany(response.data.company);\r\n        this.router.navigateByUrl('/dashboard');\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n  \r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompanyListComponent } from './company-list.component';\r\nimport { CompanyService } from 'src/app/service/company.service';\r\nimport { PaginationModule } from 'src/app/common/pagination/pagination.module';\r\nimport { LoderModule } from 'src/app/common/loder/loder.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyListComponent,\r\n    data: { title: 'company_list' }\r\n  },\r\n  {\r\n    path: 'add',\r\n    loadChildren: () => import('../add-company/add-company.module').then(m => m.AddCompanyModule),\r\n    data: { title: 'add_company' }\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    loadChildren: () => import('../add-company/add-company.module').then(m => m.AddCompanyModule),\r\n    data: { title: 'edit_company' }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CompanyListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaginationModule,\r\n    LoderModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    CompanyService\r\n  ]\r\n})\r\nexport class CompanyListModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class CompanyService {\r\n\r\n  API_URL: string = environment.APIEndpoint;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  getCompanyList(param): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/company`, {params: param});\r\n  }\r\n\r\n  addCompany(data): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/company`, data);\r\n  }\r\n\r\n  editCompany(id, data): Observable<any> {\r\n    return this.http.put(`${this.API_URL}/company/${id}`, data);\r\n  }\r\n\r\n  deleteCompany(id): Observable <any> {\r\n    return this.http.delete(`${this.API_URL}/company/${id}`);\r\n  }\r\n\r\n  getCompanyById(id, param = null): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/company/${id}`, {params: param});\r\n  }\r\n\r\n \r\n\r\n \r\n\r\n}\r\n"]}