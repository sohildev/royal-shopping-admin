{"version":3,"sources":["./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/reset-password/reset-password.component.ts","./src/app/auth/reset-password/reset-password.module.ts"],"names":[],"mappings":"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","file":"auth-reset-password-reset-password-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"sign-in-form\\\" [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"brand text-center d-block m-b-30 m-t-20\\\">\\r\\n          <!-- <img src=\\\"assets/logo-login.svg\\\" alt=\\\"DigiPayWallet Logo\\\" style=\\\"width: 150px\\\"> -->\\r\\n        </div>\\r\\n        <h1 class=\\\"sign-in-heading text-center\\\">Forgotten Password?</h1>\\r\\n        <p class=\\\"text-center m-b-20 text-muted\\\">Enter your email address below, and we'll email instructions for\\r\\n          setting a new one.</p>\\r\\n        <div *ngIf=\\\"formErrors.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n          <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n          <span [innerHTML]=\\\"formErrors.error\\\"> </span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"formErrors.success\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n          <a class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n          <span [innerHTML]=\\\"formErrors.success\\\"> </span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">New Password</label>\\r\\n          <input type=\\\"password\\\" [formControl]=\\\"resetPasswordForm.controls['password']\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"New password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputconfirmpassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n          <input type=\\\"password\\\" [formControl]=\\\"resetPasswordForm.controls['confirm_password']\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm password\\\">\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block m-top-24\\\" [ngClass]=\\\"{'qt-loader qt-loader-mini qt-loader-left': showLoader}\\\"\\r\\n          [disabled]=\\\"showLoader\\\">\\r\\n          Reset Password\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from 'src/app/service/config.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { CommonFunction, PasswordValidation } from 'src/app/common';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html'\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  resetPasswordForm: FormGroup;\r\n  formErrors = {\r\n    error: null,\r\n    success: null,\r\n  };\r\n  showLoader = false;\r\n  token: any = null;\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n  ) {\r\n    this.config.config = { showHeader: false };\r\n    this.token = this.activatedRoute.snapshot.paramMap.get('token');\r\n    this.resetPasswordForm = this.fBuilder.group({\r\n      password: [null, Validators.compose([Validators.required])], // validatePassword\r\n      confirm_password: [null, Validators.compose([Validators.required])],\r\n    }, {\r\n      validator: PasswordValidation.passwordValidation()\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.checkResetPasswordToken(this.token).subscribe((response) => {\r\n      if (response.success) {\r\n      } else {\r\n        this.router.navigateByUrl('/link-expired');\r\n      }\r\n    }, (error) => {\r\n      this.router.navigateByUrl('/link-expired');\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.resetPasswordForm.valid) {\r\n      this.showLoader = true;\r\n      const formData  = {\r\n        password: this.resetPasswordForm.value.password,\r\n        confirm_password: this.resetPasswordForm.value.confirm_password,\r\n      };\r\n      this.authService.resetPassword(this.token, formData).subscribe((response) => {\r\n        // console.log('In success', response);\r\n        this.showLoader = false;\r\n        if (response.success) {\r\n          this.formErrors.success = `* ${response.message}`;\r\n          CommonFunction.resetForm(this.resetPasswordForm);\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/login');\r\n          }, 3000);\r\n        } else {\r\n          this.formErrors.error = `* ${response.error}`;\r\n        }\r\n      }, (error) => {\r\n        // console.log('In error', error);\r\n        this.formErrors.error = `* ${error.error}`;\r\n        this.showLoader = false;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResetPasswordComponent,\r\n    data: { title: 'reset_password' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ResetPasswordModule { }\r\n"],"sourceRoot":"webpack:///"}