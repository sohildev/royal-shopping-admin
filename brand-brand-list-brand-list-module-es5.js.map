{"version":3,"sources":["webpack:///src/app/brand/brand-list/brand-list.component.html","webpack:///src/app/brand/brand-list/brand-list.component.ts","webpack:///src/app/brand/brand-list/brand-list.module.ts","webpack:///src/app/service/brand.service.ts"],"names":["BrandListComponent","BrandService","dataService","dropdownService","paginationService","loadingState","objectArray","pagination","searchText","currentPage","category_id","categoryList","subscription","searchTextSubject","subscribe","v","getObjects","getCategoryList","getCategoryDrp","res","success","data","params","page","search","getBrandList","response","getPager","error","text","object","swal","fire","title","delete_header_text","delete_smalll_text","icon","delete_dialogue_type","showCancelButton","confirmButtonText","delete_confirm_button","cancelButtonText","delete_cancel_button","then","result","value","deleteBrand","id","noop","JSON","parse","unsubscribe","selector","template","routes","path","component","loadChildren","m","BrandAddModule","BrandListModule","declarations","imports","forChild","providers","http","API_URL","APIEndpoint","param","get","post","put"],"mappings":"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","file":"brand-brand-list-brand-list-module-es5.js","sourcesContent":["export default \"<loder [show]=\\\"loadingState\\\"></loder>\\n\\n<div class=\\\"page-breadcrumb\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-7 align-self-center\\\">\\n            <h4 class=\\\"page-title text-truncate text-dark font-weight-medium mb-1\\\">Brand</h4>\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <nav aria-label=\\\"breadcrumb\\\">\\n                    <ol class=\\\"breadcrumb m-0 p-0\\\">\\n                        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"text-muted\\\">Apps</a></li>\\n                        <li class=\\\"breadcrumb-item text-muted active\\\" aria-current=\\\"page\\\">Brand List</li>\\n                    </ol>\\n                </nav>\\n                <div class=\\\"form-group ml-3\\\">\\n                    <ng-select [(ngModel)]=\\\"category_id\\\" [items]=\\\"categoryList\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" (change)=\\\"getObjects()\\\" placeholder=\\\" Select a Category \\\"></ng-select>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-5 align-self-center\\\">\\n            <div class=\\\"customize-input float-right\\\">\\n                <button type=\\\"button\\\" [routerLink]=\\\"['/brand/add']\\\" class=\\\"btn btn-outline-info  border-0 custom-shadow custom-radius\\\">Add Brand</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"content\\\">\\n    <section class=\\\"page-content container-fluid\\\">\\n        <div class=\\\"card strache-card\\\">\\n            <div class=\\\"card-body p-0\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-hover m-0\\\">\\n                        <thead>\\n                            <tr>\\n                                <!-- <th style=\\\"width:50px;\\\">Emp. ID</th> -->\\n                                <th>Name</th>\\n                                <th>Category</th>\\n                                <th>Brand Url</th>\\n                                <th class=\\\"table-field-status\\\">Status</th>\\n                                <th class=\\\"table-field-actions text-center\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let obj of objectArray\\\">\\n                                <td>\\n\\n                                    <div class=\\\"media d-user\\\">\\n                                        <img [src]=\\\"obj?.image ? obj?.image : 'assets/images/demo.png'\\\" alt=\\\"Brand logo\\\" class=\\\"rounded-circle\\\" width=\\\"45\\\" height=\\\"45\\\" />\\n\\n\\n                                        <i class=\\\"fa fa-building-o align-self-center fa-lg mr-3 text-muted\\\"></i>\\n                                        <div class=\\\"media-body\\\">\\n                                            <h5 class=\\\"mt-1 mb-0 \\\">{{obj.name}}</h5>\\n                                            <span class=\\\"text-muted\\\">{{obj?.brand_sub_text}}</span>\\n                                        </div>\\n                                    </div>\\n\\n                                </td>\\n                                <td>{{getjson(obj.category_id)?.label }}</td>\\n                                <td>{{obj?.brand_url}}</td>\\n                                <td class=\\\"table-field-status\\\"><span class=\\\"badge badge-pill badge-info\\\">Active</span></td>\\n                                <td class=\\\"table-field-actions text-center\\\">\\n                                    <div class=\\\"action-drop dropdown\\\">\\n                                        <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" class=\\\"btn btn-default btn-sm btn-icon-only\\\" title=\\\"\\\">\\n                                            <i class=\\\"fas fa-ellipsis-h\\\"></i>\\n                                        </a>\\n                                        <div class=\\\"dropdown-menu dropdown-icon-menu dropdown-menu-right\\\">\\n                                            <a [routerLink]=\\\"['edit', obj.id]\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-edit fa-fw text-primary\\\">\\n                        </i> Edit</a>\\n                                            <a (click)=\\\"deleteObject(obj)\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-trash fa-fw text-primary\\\">\\n                        </i> Delete</a>\\n                                        </div>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                            <tr *ngIf=\\\"objectArray.length==0\\\">\\n                                <td colspan=\\\"5\\\">No Record Found</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n                <pagination [paginationList]=\\\"pagination\\\" [currentPage]=\\\"currentPage\\\" (onPageChange)=\\\"getPage($event)\\\">\\n                </pagination>\\n            </div>\\n        </div>\\n    </section>\\n</div>\";","declare var swal: any;\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { errorMessage } from 'src/app/messages';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { BrandService } from 'src/app/service/brand.service';\r\nimport { ISubscription } from \"rxjs/Subscription\";\r\nimport { DropDownService } from 'src/app/service/drop-down.service';\r\n\r\n@Component({\r\n  selector: 'app-brand-list',\r\n  templateUrl: './brand-list.component.html'\r\n})\r\nexport class BrandListComponent implements OnInit {\r\n\r\n  loadingState = true;\r\n  objectArray: Array<any> = [];\r\n  pagination: any = null;\r\n  searchText: any = null;\r\n  currentPage: any = 1;\r\n  category_id:string=null;\r\n  private subscription: ISubscription;\r\n  categoryList: any=[];\r\n  constructor(\r\n    private BrandService: BrandService,\r\n    private dataService: DataService,\r\n    private dropdownService:DropDownService,\r\n    private paginationService: PaginationService\r\n  ) {  }\r\n\r\n  ngOnInit() {\r\n    this.subscription= this.dataService.searchTextSubject.subscribe((v) =>{ \r\n      this.searchText=v;\r\n      this.getObjects();\r\n      this.getCategoryList();\r\n    });\r\n  }\r\n\r\n  getCategoryList() {\r\n    this.dropdownService.getCategoryDrp().subscribe((res) => {\r\n      if (res.success) {\r\n        this.categoryList = res.data ? res.data : [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getObjects() {\r\n    this.loadingState=true;\r\n    const params: any = { page: this.currentPage };\r\n    if (this.searchText) {\r\n      params.search = this.searchText;\r\n    }\r\n    if(this.category_id){\r\n      params.category_id=this.category_id;\r\n    }\r\n    this.BrandService.getBrandList(params).subscribe((response) => {\r\n      // console.log(response);\r\n      this.loadingState = false;\r\n      if (response.success) {\r\n        this.objectArray = response.data.data;\r\n        this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n      // console.log(error);\r\n    });\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n    this.getObjects();\r\n  }\r\n\r\n  searchObject(text) {\r\n    this.searchText = text;\r\n    this.getObjects();\r\n  }\r\n\r\n  deleteObject(object) {\r\n    swal.fire({\r\n      title: errorMessage.delete_header_text,\r\n      text: errorMessage.delete_smalll_text,\r\n      icon: errorMessage.delete_dialogue_type,\r\n      showCancelButton: true,\r\n      confirmButtonText: errorMessage.delete_confirm_button,\r\n      cancelButtonText: errorMessage.delete_cancel_button,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.BrandService.deleteBrand(object.id).subscribe(\r\n          (response) => {\r\n            if (response.success) {\r\n              this.getObjects();\r\n            }\r\n          },\r\n        );\r\n      }\r\n    }).catch(swal.noop);\r\n  }\r\n\r\n  getjson(data){\r\n    if(data)\r\n      return JSON.parse(data);\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrandListComponent } from './brand-list.component';\r\nimport { BrandService } from 'src/app/service/brand.service';\r\nimport { PaginationModule } from 'src/app/common/pagination/pagination.module';\r\nimport { LoderModule } from 'src/app/common/loder/loder.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandListComponent,\r\n    // data: { title: 'company_list' }\r\n  },\r\n  {\r\n    path: 'add',\r\n    loadChildren: () => import('../brand-add/brand-add.module').then(m => m.BrandAddModule),\r\n    // data: { title: 'add_company' }\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    loadChildren: () => import('../brand-add/brand-add.module').then(m => m.BrandAddModule),\r\n    // data: { title: 'edit_company' }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BrandListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaginationModule,\r\n    LoderModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    BrandService\r\n  ]\r\n})\r\nexport class BrandListModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class BrandService {\r\n\r\n  API_URL: string = environment.APIEndpoint;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  getBrandList(param): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/brand`, {params: param});\r\n  }\r\n\r\n  addBrand(data): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/brand`, data);\r\n  }\r\n\r\n  editBrand(id, data): Observable<any> {\r\n    return this.http.put(`${this.API_URL}/brand/${id}`, data);\r\n  }\r\n\r\n  deleteBrand(id): Observable <any> {\r\n    return this.http.delete(`${this.API_URL}/brand/${id}`);\r\n  }\r\n\r\n  getBrandById(id, param = null): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/brand/${id}`, {params: param});\r\n  }\r\n\r\n \r\n\r\n \r\n\r\n}\r\n"]}